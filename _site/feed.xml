<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sunil Sarolkar</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 14 Jul 2018 17:25:10 +0530</pubDate>
    <lastBuildDate>Sat, 14 Jul 2018 17:25:10 +0530</lastBuildDate>
    <generator>Jekyll v3.5.1</generator>
    
      <item>
        <title>Blinking blue LED of Death of ESP8266</title>
        <description>&lt;p&gt;copy the examples project to root of&lt;/p&gt;

&lt;p&gt;compile using
./gen_misc.sh&lt;/p&gt;

&lt;p&gt;Write to ESP flash&lt;/p&gt;

&lt;p&gt;sudo env “PATH=$PATH” esptool.py –port /dev/ttyUSB0 –baud 921600 write_flash 0x00000 ../../ESP8266_NONOS_SDK/bin/eagle.flash.bin 0x10000 ../../ESP8266_NONOS_SDK/bin/eagle.irom0text.bin 0x3FB000 ../../ESP8266_NONOS_SDK/bin/blank.bin 0x3FC000 ../../ESP8266_NONOS_SDK/bin/esp_init_data_default_v08.bin 0x3FE000 ../../ESP8266_NONOS_SDK/bin/blank.bi&lt;/p&gt;
</description>
        <pubDate>Tue, 11 Oct 2016 10:54:44 +0530</pubDate>
        <link>http://localhost:4000/struts/13/backword/compatibility/2016/10/11/CompilingESP8266-examples.html</link>
        <guid isPermaLink="true">http://localhost:4000/struts/13/backword/compatibility/2016/10/11/CompilingESP8266-examples.html</guid>
        
        
        <category>Struts</category>
        
        <category>13</category>
        
        <category>backword</category>
        
        <category>compatibility</category>
        
      </item>
    
      <item>
        <title>Struts 1.3.10 not backward compatible with Struts 1.2.9/1.2.4</title>
        <description>&lt;p&gt;Recently while working on one of the application built on top of Struts 1.2.4, there was a security vulnerability reported by Varacode scan asking us to upgrade to latest Struts 1 version 1.3.10.&lt;/p&gt;

&lt;p&gt;Our organisation manages java libraries in Nexus Maven repository, the application built around 6 years back which does not make use of Maven for managing its dependencies. As a security mandate we must use our internal Maven Nexus repository to obtain all dependent jars of Struts 1.3.10 and put them manually in the classpath of ant script.&lt;/p&gt;

&lt;p&gt;Fortunately good people at Apache Software Foundation have already thought about the problem and have built maven dependencies plugin which allows us to easily download the dependencies of any artifact, so I followed below steps to download these dependencies&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I created one blank maven project in Eclipse&lt;/li&gt;
  &lt;li&gt;Updated the pom.xml as follows&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;dependencydownload&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.0.1-SNAPSHOT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
  
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-dependency-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.10&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;copy-dependencies&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;install&lt;span class=&quot;nt&quot;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;nt&quot;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;copy-dependencies&lt;span class=&quot;nt&quot;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;nt&quot;&gt;&amp;lt;outputDirectory&amp;gt;&lt;/span&gt;${project.build.directory}/dependencies&lt;span class=&quot;nt&quot;&gt;&amp;lt;/outputDirectory&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;nt&quot;&gt;&amp;lt;overWriteReleases&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/overWriteReleases&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;nt&quot;&gt;&amp;lt;overWriteSnapshots&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/overWriteSnapshots&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;nt&quot;&gt;&amp;lt;overWriteIfNewer&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/overWriteIfNewer&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
    
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.struts&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;struts-core&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.3.10&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As highlighted in above pom.xml dependencies plugin will execute on maven install phase and will store its dependencies in&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.build.directory&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/dependencies&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;folder which as per Maven convention is your target/dependencies directory.&lt;/p&gt;

&lt;p&gt;If your organisation uses custom Maven setup then this default may refer to some other directory. Once you run command mvn install either from command line or from Eclipse you should get all your dependencies in your target/dependencies&lt;/p&gt;

&lt;p&gt;Once you obtain all the dependencies you can easily add them in ant script.&lt;/p&gt;

&lt;p&gt;Making struts configuration changes.&lt;/p&gt;

&lt;p&gt;After updating jars you need to follow below instructions to get the application working.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Identify if there are any tag libraries copied from older struts jars to your web application. If there are you need to replace them from the new struts jar.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Identify any custom tags defined which points to older struts tag classes, if you find you need to search for new class package [ Don’t forget to use Eclipse Ctrl-Shift-T ] Once you make above changes hopefully you will have your application up and running.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;
</description>
        <pubDate>Tue, 11 Oct 2016 10:54:44 +0530</pubDate>
        <link>http://localhost:4000/struts/13/backword/compatibility/2016/10/11/Struts2-backward-compatibility-issue.html</link>
        <guid isPermaLink="true">http://localhost:4000/struts/13/backword/compatibility/2016/10/11/Struts2-backward-compatibility-issue.html</guid>
        
        
        <category>Struts</category>
        
        <category>13</category>
        
        <category>backword</category>
        
        <category>compatibility</category>
        
      </item>
    
      <item>
        <title>Findbugs issue with detecting resource leaks for resource initialized outside methods scope</title>
        <description>&lt;p&gt;Recently while working with Findbugs plugin for Eclipse I discovered that Findbugs fails to identify resource leak in the scenarios where resource is initialized outside the method scope.&lt;/p&gt;

&lt;p&gt;Below is the sample code in which Findbugs fails to detect resource leak&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;public class TestConn {
 // JDBC driver name and database URL
 static final String JDBC_DRIVER = &quot;com.mysql.jdbc.Driver&quot;;
 static final String DB_URL = &quot;jdbc:mysql://localhost/EMP&quot;;

 // Database credentials
 static final String USER = &quot;username&quot;;
 static final String PASS = &quot;password&quot;;

 public static void main(String[] args) {
  Test();
 }// end main

 private static void Test() {
  Connection conn = null;
  Statement stmt = null;
  try {
   // STEP 2: Register JDBC driver
   Class.forName(&quot;com.mysql.jdbc.Driver&quot;);

   // STEP 3: Open a connection
   System.out.println(&quot;Connecting to database...&quot;);
   conn = getConn();//&amp;lt;===Findbugs fails to detect connection leak

   // STEP 4: Execute a query
   System.out.println(&quot;Creating statement...&quot;);
   stmt = conn.createStatement();
   String sql;
   sql = &quot;SELECT id, first, last, age FROM Employees&quot;;
   ResultSet rs = stmt.executeQuery(sql);

   // STEP 5: Extract data from result set
   while (rs.next()) {
    // Retrieve by column name
    int id = rs.getInt(&quot;id&quot;);
    int age = rs.getInt(&quot;age&quot;);
    String first = rs.getString(&quot;first&quot;);
    String last = rs.getString(&quot;last&quot;);

    // Display values
    System.out.print(&quot;ID: &quot; + id);
    System.out.print(&quot;, Age: &quot; + age);
    System.out.print(&quot;, First: &quot; + first);
    System.out.println(&quot;, Last: &quot; + last);
   }
   
  } catch (SQLException se) {
   // Handle errors for JDBC
   se.printStackTrace();
  } catch (Exception e) {
   // Handle errors for Class.forName
   e.printStackTrace();
  } finally {
   /*try {
    conn.close();
   } catch (SQLException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
   }*/
  }// end try
  System.out.println(&quot;Goodbye!&quot;);
 }

 private static Connection getConn() throws SQLException {
  return DriverManager.getConnection(DB_URL, USER, PASS);
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you might already recognized the leak situation where connection object initialized at line 23.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;conn = getConn();//&amp;lt;===Findbugs fails to detect connection leak
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The solution for the problem is not that straightforward and separate plugin was required to recognize the resource leak situations. This new plugin would act as add on for Findbugs to detect leak in this specific scenario.&lt;/p&gt;

&lt;p&gt;You download the plugin at https://github.com/spsarolkar/Findbugs_AdResTrackr/blob/master/AdvancedResourceTrackr/dist/LeakedResourceDetector.jar&lt;/p&gt;

&lt;p&gt;Feel free fork the repository “https://github.com/spsarolkar/Findbugs_AdResTrackr.git”&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Mar 2014 10:54:44 +0530</pubDate>
        <link>http://localhost:4000/findbugs/issue/with/detecting/resource/leaks/2014/03/09/Findbugs-issue-with-detecting-resource-leaks.html</link>
        <guid isPermaLink="true">http://localhost:4000/findbugs/issue/with/detecting/resource/leaks/2014/03/09/Findbugs-issue-with-detecting-resource-leaks.html</guid>
        
        
        <category>Findbugs</category>
        
        <category>issue</category>
        
        <category>with</category>
        
        <category>detecting</category>
        
        <category>resource</category>
        
        <category>leaks</category>
        
      </item>
    
  </channel>
</rss>
